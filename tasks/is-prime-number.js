/*
  Написать функцию, определяющую является ли число простым.
  Простое число имеет только 2 делителя - самого себя и единицу.
*/

/*
  Есть смысл проверять делители в промежутке от 1 до корня от заданного числа (я не до конца понял почему).
  Также есть смысл проверять только нечётные числа (за исключением случая, когда проверяем число 2).
*/

function isPrime(n) {
  if (n < 1) {
    throw Error('Числа меньше единицы не могут быть простыми.');
  }
  if (n === 2) {
    console.log(`Число ${n} является единственным простым чётным числом. Делители: 1 и само число.`)
    return true;
  }
  let sqrtN = Math.ceil(Math.sqrt(n));
  console.log(`Корень из ${n} - ${sqrtN}`);
  const range = Array.from({length: Math.ceil(sqrtN / 2)}, (_, i) => i * 2 + 1);
  console.log(`Ищем в среди этих чисел: ${range}`);
  const dividers = range.filter(rangeItem => n % rangeItem === 0)
  console.log(`Делители: ${dividers} и само число (${dividers.length + 1})`);
  if (dividers.length <= 1) {
    console.log(`Число ${n} является простым. Делители: ${dividers} и само число.`)
  } else {
    console.log(`Число ${n} не является простым. Делители: ${dividers} и само число.`)
  }
  return dividers.length <= 1;
}

isPrime(25);

// TODO: переписать на обычный цикл, без фильтрации и создания массива.