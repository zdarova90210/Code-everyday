import {interval, map, take} from "rxjs";

/*
Задача #1
Создайте поток чисел с интервалом в 1 секунду. Для каждого числа:
1. Преобразуйте его так, чтобы получить строку, где число повторяется столько раз, каково само число
2. Возьмите только первые 5 чисел из потока

Пример ожидаемого вывода:
0: "" (пустая строка, так как 0 повторить 0 раз)
1: "1"
2: "22"
3: "333"
4: "4444"
*/

const intervalStream = interval(1000);

intervalStream
  .pipe(
    take(5),
    map(n => String(n).repeat(n)),
  )
// .subscribe(console.log);


/*
Задача #2
Создайте поток чисел с интервалом в 1 секунду. Для каждого числа нужно:
1. Создать объект, который содержит:
    - исходное число (`value`)
    - является ли число простым (`isPrime`)
    - все делители числа в массиве (`dividers`)

2. Взять первые 7 чисел

Пример ожидаемого вывода для числа 4:
{
  value: 4,
  isPrime: false,
  dividers: [1, 2, 4]
}
*/

// Оптимизация функции проверки на простое число.
// Проверяем только нечётные числа (за исключением случая когда n === 2).
// Проверяем только числа до корня от n (включительно).
function isPrime(n: number): boolean {
  const end = Math.ceil(Math.sqrt(n));
  const nums = Array.from({length: Math.ceil(end / 2)});
  const dividersCount = nums.filter((_, i) => n % i === 0).length;
  return dividersCount === 1;
}